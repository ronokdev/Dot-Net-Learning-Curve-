using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


// collection type :: arrayList , stack_queue , dictionary , hastable

namespace Bitm
{
    public class Program
    {
        public void Main(string[] args)
        {

            //int testMethodResult =  testMethod(10,10);  // assessing new method from main method----
            //Console.Write(testMethodResult);
            //Console.Read();

       
            //arrayList();

            //stack_queue();

            //queue_program();

            //dictionary_program();

            // hash_table_function();

            bitm_two b_two = new bitm_two(); // bitm_two er ekta object create korlam b_two
            String ans = b_two.test_return();
            Console.WriteLine(ans);

            bitm_two reference_1 = b_two; // creating the reference of bitm_two.reference types represent the address of the variable rather than the data itself
            reference_1.test = "Manipulation the text"; // changing the value of "test" with the reference.
            Console.WriteLine(reference_1.test_return());






            Console.ReadLine(); 

        }

        public int testMethod(int pera1,int pera2)
        {
            int result = pera1 + pera2;
            return result;   
        }

        // array list -------- start ---------------
        public void arrayList()
        {
            ArrayList myfirstarrayList = new ArrayList();

            myfirstarrayList.Add("My");
            myfirstarrayList.Add("age is");
            myfirstarrayList.Add("20");

            foreach (var item in myfirstarrayList)
            {
                Console.WriteLine(item);
            }
            Console.ReadLine();

        }

        // array list -------- END ---------------

        // stack  --------- start ---------------
        public void stack_queue()
        {
            Stack<int> my_first_stack = new Stack<int>();

            my_first_stack.Push(100);
            my_first_stack.Push(101);
            my_first_stack.Push(102);
            my_first_stack.Push(103);

            foreach (int item in my_first_stack)
            {
                Console.WriteLine(item);
            }

            Console.WriteLine("Number of Element is the stack is :: "+my_first_stack.Count);

            Console.WriteLine("We will pop element > "+my_first_stack.Pop());
            Console.WriteLine("--------------------");
            foreach (int item in my_first_stack)
            {
                Console.WriteLine(item);
            }
            Console.ReadLine();



        }


        // stack  --------- END ---------------

        // queue ---- start ---------------
        public void queue_program()
        {
            Queue<int> my_first_queue =new Queue<int>();

            my_first_queue.Enqueue(50);
            my_first_queue.Enqueue(60);
            my_first_queue.Enqueue(70);
            my_first_queue.Enqueue(80);

            foreach (int item in my_first_queue)
            {
                Console.WriteLine(item);
            }
            Console.WriteLine("Number of Element is the Queue is :: " + my_first_queue.Count);
            Console.WriteLine("Dequeue ELement > "+my_first_queue.Dequeue());
            Console.WriteLine("--------------------");

            foreach (int item in my_first_queue)
            {
                Console.WriteLine(item);
            }


            Console.ReadLine();

        }

        // queue ---- start ---------------

        // dictionary ------- start -------------
        // key dhore value rakhbe , key ta ki type hobe seita define korte hobe......
        public void dictionary_program()
        {
            Dictionary<int, string> my_first_dictionary = new Dictionary<int, string>();

            my_first_dictionary.Add(10,"My Name");
            my_first_dictionary.Add(11, "is");
            my_first_dictionary.Add(12, "Ronok");

            foreach (KeyValuePair<int,string> item in my_first_dictionary)
            {
                Console.WriteLine(item.Key+"----"+item.Value);
            }
            Console.ReadLine();

        }

        // dictionary ------- END -------------

        // hastable --------------- start ----------------------

        // sort kora jay nah ; value checking khub easy

        public void hash_table_function() {

            Hashtable my_first_hash_table = new Hashtable();
            my_first_hash_table.Add(1,50);
            my_first_hash_table.Add(2,"ronok");
            my_first_hash_table.Add(3,550);
            my_first_hash_table.Add(4,1650);

            Console.Write(my_first_hash_table.ContainsValue("ronok"));
           

            foreach (DictionaryEntry test in my_first_hash_table)
            {
                Console.WriteLine(test.Key+" : "+test.Value);
            }
            Console.ReadLine();
        }
    // hastable --------------- END ----------------------
    }
}
